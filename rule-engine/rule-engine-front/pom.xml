<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>rule-engine</groupId>
		<artifactId>rule-engine</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>rule-engine-front</artifactId>
	<packaging>jar</packaging>
	<name>rule-engine-front</name>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<!-- 加密jar文件 -->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
		</dependency>
		<!-- 引入核心jar包 -->
		<dependency>
			<groupId>rule-engine</groupId>
			<artifactId>rule-engine-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- redis start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- redis end -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-feign</artifactId>
		</dependency>
		<dependency>
			<groupId>com.tencent.tsf</groupId>
			<artifactId>spring-cloud-tsf-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>com.tencent.tsf</groupId>
			<artifactId>spring-cloud-tsf-auth</artifactId>
		</dependency>
		<dependency>
			<groupId>com.tencent.tsf</groupId>
			<artifactId>spring-cloud-tsf-metrics</artifactId>
		</dependency>
		<dependency>
			<groupId>com.tencent.tsf</groupId>
			<artifactId>spring-cloud-tsf-route</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils-core</artifactId>
			<version>1.8.0</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<!-- 本地开发环境 -->
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<!-- 测试环境 -->
			<id>test</id>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
		<profile>
			<!-- 生产环境 -->
			<id>pro</id>
			<properties>
				<profiles.active>pro</profiles.active>
			</properties>

		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 资源根目录排除各环境的配置，防止在生成目录中多余其它目录 -->
				<excludes>
					<exclude>test/*</exclude>
					<exclude>pro/*</exclude>
					<exclude>dev/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources/${profiles.active}</directory>
			</resource>
		</resources>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<!-- 让lombk生效 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
			</plugin>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.18.0.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 去除不需要的文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<!-- 添加index则不从mainfest中读取classpath，而是从Index.list中读取 -->
						<!-- <index>true</index> -->
						<manifest>
							<mainClass>com.foxconn.core.pro.server.rule.engine.front.RuleEngineFrontApplication</mainClass>
							<!-- to create a class path to your dependecies you have to fill true 
								in this field -->
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<!--<classpathLayoutType>custom</classpathLayoutType> <customClasspathLayout> 
								lib/ artifact.groupId. {artifact.artifactId}.$${artifact.extension} </customClasspathLayout> -->
						</manifest>
						<manifestEntries>
							<Class-Path>./</Class-Path>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>**/test/**</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- spring boot 打包 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> 
				not append assembly id in release file name <appendAssemblyId>false</appendAssemblyId> 
				<descriptors> <descriptor>src/main/build/package.xml</descriptor> </descriptors> 
				</configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> 
				<goals> <goal>single</goal> </goals> </execution> </executions> </plugin> -->
			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> 
				<archive> <manifest> 这里要替换成jar包main方法所在类 <mainClass>com.foxconn.core.pro.server.rule.engine.front.RuleEngineFrontApplication</mainClass> 
				</manifest> </archive> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> 
				<phase>package</phase> <goals> <goal>single</goal> </goals> </execution> 
				</executions> </plugin> -->
		</plugins>
	</build>
</project>
